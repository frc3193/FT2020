// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Subsystems/Shooter.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "Commands/ShooterDefault.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Shooter::Shooter() : frc::Subsystem("Shooter") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    shooterLeft.reset(new WPI_TalonFX(0));
    shooterLeft->SetInverted(TalonFXInvertType::Clockwise);
    shooterLeft->ConfigNominalOutputForward(0, 30);
    shooterLeft->ConfigNominalOutputReverse(0, 30);
    shooterLeft->ConfigPeakOutputForward(1, 30);
    shooterLeft->ConfigPeakOutputReverse(-1, 30);
    shooterLeft->Config_kF(0, 0.05, 30);
    shooterLeft->Config_kP(0, 0.05, 30);
    shooterLeft->Config_kI(0, 0.0, 30);
    shooterLeft->Config_kD(0, 0.0, 30);

    shooterRight.reset(new WPI_TalonFX(1));
    shooterRight->Set(ControlMode::Follower, 0);
    shooterRight->SetInverted(TalonFXInvertType::OpposeMaster);

}

double Shooter::rpmToDeltaPer100ms(double rpm){
    //return rpm * 4 / 600; // encoder reports 4 revolutions per 1 revolution
    return rpm * 4096 / 600; // example from GitHub
}

void Shooter::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        SetDefaultCommand(new ShooterDefault());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Shooter::Periodic() {
    // Put code here to be run every loop

}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


// Put methods for controlling this subsystem
// here. Call these from Commands.

